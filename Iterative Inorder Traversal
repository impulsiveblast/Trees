//inorder traversal
//left-root-right
//stack would be used for the iterative approach

class inorder{
    
    vector<int> inorder(Node* root){
          
          stack<Node*> st;
          
          st.push(root);
          vector<int> inorder;
          if(st.size()==0)
          return inorder;
          
          Node* node=root;
          while(st.size()!=0)
          {
            
            if(node!=NULL)
            {
                st.push(node);
                node=node->left;
            }
            else
            {
                node=st.top();
                st.pop();
                inorder.push_back(node->val);
                
                node=node->right;
                
            }
               
          }
          
          
          return preorder;
    }
}
